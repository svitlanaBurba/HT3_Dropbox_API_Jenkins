{
"info": {
"_postman_id": "56e9b8ca-4c12-4bf0-b958-f2538e4cd7b7",
"name": "Dropbox API Tests",
"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
"_exporter_id": "16988170"
},
"item": [
{
"name": "Upload File",
"item": [
{
"name": "Negative",
"item": [
{
"name": "UploadFile_unauthentificated",
"event": [
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 400\", function () {\r",
"    pm.response.to.have.status(400);\r",
"});"
],
"type": "text/javascript"
}
}
],
"protocolProfileBehavior": {
"disabledSystemHeaders": {
"content-type": true
}
},
"request": {
"auth": {
"type": "noauth"
},
"method": "POST",
"header": [
{
"key": "Dropbox-API-Arg",
"value": "{\"autorename\": false,\"mode\": \"add\",\"mute\": false,\"path\": \"/HW.txt\",\"strict_conflict\": false}",
"type": "text"
},
{
"key": "Content-Type",
"value": "application/octet-stream",
"type": "text"
}
],
"body": {
"mode": "file",
"file": {
"src": "testdata/testfile.txt"
}
},
"url": {
"raw": "{{apiURL_Upload}}",
"host": [
"{{apiURL_Upload}}"
]
}
},
"response": []
},
{
"name": "UploadFile_wrong_request_type",
"event": [
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 404\", function () {\r",
"    pm.response.to.have.status(404);\r",
"});"
],
"type": "text/javascript"
}
}
],
"protocolProfileBehavior": {
"disableBodyPruning": true,
"disabledSystemHeaders": {
"content-type": true
}
},
"request": {
"method": "GET",
"header": [
{
"key": "Dropbox-API-Arg",
"value": "{\"autorename\": false,\"mode\": \"add\",\"mute\": false,\"path\": \"/HW.txt\",\"strict_conflict\": false}",
"type": "text"
},
{
"key": "Content-Type",
"value": "application/octet-stream",
"type": "text"
}
],
"body": {
"mode": "file",
"file": {
"src": "testdata/testfile.txt"
}
},
"url": {
"raw": "{{apiURL_Upload}}",
"host": [
"{{apiURL_Upload}}"
]
}
},
"response": []
},
{
"name": "UploadFile_no_args",
"event": [
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 400\", function () {\r",
"    pm.response.to.have.status(400);\r",
"});"
],
"type": "text/javascript"
}
}
],
"protocolProfileBehavior": {
"disabledSystemHeaders": {
"content-type": true
}
},
"request": {
"method": "POST",
"header": [
{
"key": "Dropbox-API-Arg",
"value": "{\"autorename\": false,\"mode\": \"add\",\"mute\": false,\"path\": \"/HW.txt\",\"strict_conflict\": false}",
"type": "text",
"disabled": true
},
{
"key": "Content-Type",
"value": "application/octet-stream",
"type": "text"
}
],
"body": {
"mode": "file",
"file": {
"src": "testdata/testfile.txt"
}
},
"url": {
"raw": "{{apiURL_Upload}}",
"host": [
"{{apiURL_Upload}}"
]
}
},
"response": []
},
{
"name": "UploadFile_no_path",
"event": [
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 400\", function () {\r",
"    pm.response.to.have.status(400);\r",
"});"
],
"type": "text/javascript"
}
}
],
"protocolProfileBehavior": {
"disabledSystemHeaders": {
"content-type": true
}
},
"request": {
"method": "POST",
"header": [
{
"key": "Dropbox-API-Arg",
"value": "{\"autorename\": false,\"mode\": \"add\",\"mute\": false,\"strict_conflict\": false}",
"type": "text"
},
{
"key": "Content-Type",
"value": "application/octet-stream",
"type": "text"
}
],
"body": {
"mode": "file",
"file": {
"src": "testdata/testfile.txt"
}
},
"url": {
"raw": "{{apiURL_Upload}}",
"host": [
"{{apiURL_Upload}}"
]
}
},
"response": []
}
]
},
{
"name": "UploadFile",
"event": [
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 200\", function () {\r",
"    pm.response.to.have.status(200);\r",
"});\r",
"\r",
"var fileName = pm.collectionVariables.get(\"upload_fileName\");\r",
"var responseJson = pm.response.json();\r",
"\r",
"if (responseJson && pm.response.code === 200){\r",
"    pm.collectionVariables.set(\"lastSuccessfullUpload\", responseJson);\r",
"    pm.collectionVariables.set(\"lastSuccessfullUploadFileName\",fileName);\r",
"}\r",
"\r",
"pm.test(\"FileName as specified\", function () {\r",
"    pm.expect(responseJson.name).to.eql(fileName);\r",
"});"
],
"type": "text/javascript"
}
},
{
"listen": "prerequest",
"script": {
"exec": [
""
],
"type": "text/javascript"
}
}
],
"protocolProfileBehavior": {
"disabledSystemHeaders": {
"content-type": true
}
},
"request": {
"method": "POST",
"header": [
{
"key": "Dropbox-API-Arg",
"value": "{\"autorename\": false,\"mode\": \"add\",\"mute\": false,\"path\": \"/{{upload_fileName}}\",\"strict_conflict\": false}",
"type": "text"
},
{
"key": "Content-Type",
"value": "application/octet-stream",
"type": "text"
}
],
"body": {
"mode": "file",
"file": {
"src": "testdata/testfile.txt"
}
},
"url": {
"raw": "{{apiURL_Upload}}",
"host": [
"{{apiURL_Upload}}"
]
}
},
"response": []
}
],
"event": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
""
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
"var today=new Date();",
"var year2020 = new Date(\"2020-01-01\")",
"var uniqueId = today.getTime() - year2020.getTime();",
"",
"var fileName = `HW${uniqueId}.txt`;",
""
]
}
}
]
},
{
"name": "GetFileMetadata",
"item": [
{
"name": "Negative",
"item": [
{
"name": "GetMetaData_unauthentificated",
"event": [
{
"listen": "prerequest",
"script": {
"exec": [
""
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 400\", function () {\r",
"    pm.response.to.have.status(400);\r",
"});"
],
"type": "text/javascript"
}
}
],
"request": {
"auth": {
"type": "oauth2",
"oauth2": [
{
"key": "addTokenTo",
"value": "header",
"type": "string"
}
]
},
"method": "POST",
"header": [],
"body": {
"mode": "raw",
"raw": "{\r\n    \"include_deleted\": false,\r\n    \"include_has_explicit_shared_members\": false,\r\n    \"include_media_info\": false,\r\n    \"path\": \"/{{lastSuccessfullUploadFileName}}\"\r\n}",
"options": {
"raw": {
"language": "json"
}
}
},
"url": {
"raw": "{{apiURL_GetMetaData}}",
"host": [
"{{apiURL_GetMetaData}}"
]
}
},
"response": []
},
{
"name": "GetMetaData_wrong_request_type",
"event": [
{
"listen": "prerequest",
"script": {
"exec": [
""
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 404\", function () {\r",
"    pm.response.to.have.status(404);\r",
"});\r",
""
],
"type": "text/javascript"
}
}
],
"protocolProfileBehavior": {
"disableBodyPruning": true
},
"request": {
"method": "GET",
"header": [],
"body": {
"mode": "raw",
"raw": "{\r\n    \"include_deleted\": false,\r\n    \"include_has_explicit_shared_members\": false,\r\n    \"include_media_info\": false,\r\n    \"path\": \"/{{lastSuccessfullUploadFileName}}\"\r\n}",
"options": {
"raw": {
"language": "json"
}
}
},
"url": {
"raw": "{{apiURL_GetMetaData}}",
"host": [
"{{apiURL_GetMetaData}}"
]
}
},
"response": []
},
{
"name": "GetMetaData_no_payload",
"event": [
{
"listen": "prerequest",
"script": {
"exec": [
""
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 400\", function () {\r",
"    pm.response.to.have.status(400);\r",
"});\r",
""
],
"type": "text/javascript"
}
}
],
"request": {
"method": "POST",
"header": [],
"body": {
"mode": "raw",
"raw": "",
"options": {
"raw": {
"language": "json"
}
}
},
"url": {
"raw": "{{apiURL_GetMetaData}}",
"host": [
"{{apiURL_GetMetaData}}"
]
}
},
"response": []
},
{
"name": "GetMetaData_no_path",
"event": [
{
"listen": "prerequest",
"script": {
"exec": [
""
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 400\", function () {\r",
"    pm.response.to.have.status(400);\r",
"});\r",
""
],
"type": "text/javascript"
}
}
],
"request": {
"method": "POST",
"header": [],
"body": {
"mode": "raw",
"raw": "{\r\n    \"include_deleted\": false,\r\n    \"include_has_explicit_shared_members\": false,\r\n    \"include_media_info\": false\r\n}",
"options": {
"raw": {
"language": "json"
}
}
},
"url": {
"raw": "{{apiURL_GetMetaData}}",
"host": [
"{{apiURL_GetMetaData}}"
]
}
},
"response": []
}
]
},
{
"name": "GetMetaData",
"event": [
{
"listen": "prerequest",
"script": {
"exec": [
""
],
"type": "text/javascript"
}
},
{
"listen": "test",
"script": {
"exec": [
"pm.test(\"Status code is 200\", function () {\r",
"    pm.response.to.have.status(200);\r",
"});\r",
"\r",
"var lastUploadedMeta = pm.collectionVariables.get(\"lastSuccessfullUpload\");\r",
"\r",
"pm.test(\"File Data as uploaded (same name and size)\", function () {\r",
"    var responseJson = pm.response.json();\r",
"    pm.expect(responseJson.name).to.eql(lastUploadedMeta.name);\r",
"    pm.expect(responseJson.size).to.eql(lastUploadedMeta.size);\r",
"});"
],
"type": "text/javascript"
}
}
],
"request": {
"method": "POST",
"header": [],
"body": {
"mode": "raw",
"raw": "{\r\n    \"include_deleted\": false,\r\n    \"include_has_explicit_shared_members\": false,\r\n    \"include_media_info\": false,\r\n    \"path\": \"/{{lastSuccessfullUploadFileName}}\"\r\n}",
"options": {
"raw": {
"language": "json"
}
}
},
"url": {
"raw": "{{apiURL_GetMetaData}}",
"host": [
"{{apiURL_GetMetaData}}"
]
}
},
"response": []
}
],
"event": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
""
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
""
]
}
}
]
}
],
"auth": {
"type": "oauth2",
"oauth2": [
{
"key": "tokenType",
"value": "bearer",
"type": "string"
},
{
"key": "accessToken",
"value": "{{accessToken}}",
"type": "string"
},
{
"key": "addTokenTo",
"value": "header",
"type": "string"
}
]
},
"event": [
{
"listen": "prerequest",
"script": {
"type": "text/javascript",
"exec": [
"class Credentials {",
"    constructor(login, password) {",
"        this.login = login;",
"        this.password = password;",
"    }",
"",
"    get basicCredentialsPair() {",
"        const pair = Buffer.from(`${this.login}:${this.password}`).toString('base64');",
"        return pair;",
"    }",
"}",
"",
"class DropBoxAuthenticator extends Credentials {",
"    constructor(appKey, appSecret) {",
"        super(appKey, appSecret);",
"",
"        this.authUrl = 'https://api.dropbox.com/oauth2/token';",
"        this.requestHeader = {",
"            'Authorization': `Basic ${this.basicCredentialsPair}`,",
"            'Content-Type': 'application/x-www-form-urlencoded'",
"        }",
"    }",
"",
"    getRefreshAndAccessTokens (authCode, callback) {",
"        const request = {",
"            url: this.authUrl,",
"            method: 'POST',",
"            header: this.requestHeader,",
"            body: {",
"                mode: 'urlencoded',",
"                urlencoded: [",
"                    { key: 'grant_type', value: 'authorization_code' },",
"                    { key: 'code', value: authCode }",
"                ]",
"            }",
"        }",
"",
"        pm.sendRequest(request,",
"            (err, res) => {",
"                if (err || !res.json().refresh_token) {",
"                    console.log(err);",
"                } else {",
"                    callback( {",
"                       refresh_token: res.json().refresh_token,",
"                       access_token: res.json().access_token",
"                    });",
"                }",
"            });",
"    }",
"",
"    getAccessToken(refreshToken, callback) {",
"        const request = {",
"            url: this.authUrl,",
"            method: 'POST',",
"            header: this.requestHeader,",
"            body: {",
"                mode: 'urlencoded',",
"                urlencoded: [",
"                    { key: 'grant_type', value: 'refresh_token' },",
"                    { key: 'refresh_token', value: refreshToken }",
"                ]",
"            }",
"        }",
"",
"        pm.sendRequest(request,",
"            (err, res) => {",
"                if (err || !res.json().access_token) {",
"                    console.log(err);",
"                } else {",
"                    callback(res.json().access_token);",
"                }",
"            });",
"    }",
"",
"}",
"",
"class CollectionRun {",
"    constructor() {",
"        this.appKey = pm.globals.get('appKey');",
"        this.appSecret = pm.globals.get('appSecret');",
"        this.authCode = pm.globals.get('appAuthCode');",
"        this.refreshToken = pm.globals.get('refreshToken');",
"",
"        this.dropBoxAuthenticator = new DropBoxAuthenticator(this.appKey, this.appSecret);",
"    }",
"",
"    getAndSaveDropboxToken() {",
"        if (this.refreshToken && this.refreshToken.length > 0) {",
"",
"            this.dropBoxAuthenticator.getAccessToken(this.refreshToken, (token) => {",
"                this.accessToken = token;",
"                pm.globals.set('accessToken', token);",
"            });",
"",
"        } else if (this.authCode && this.authCode.length > 0) {",
"",
"            this.dropBoxAuthenticator.getRefreshAndAccessTokens(this.authCode, (tokens) => {",
"                this.refreshToken = tokens.refresh_token;",
"                this.accessToken = tokens.access_token;",
"",
"                pm.globals.set('refreshToken', this.refreshToken);",
"                pm.globals.set('accessToken', this.accessToken);",
"            });",
"        }",
"    }",
"",
"    _getUniqueFileName = () => {",
"        const today = new Date();",
"        const year2020 = new Date(\"2020-01-01\");",
"        const uniqueId = today.getTime() - year2020.getTime();",
"",
"        return `HW${uniqueId}.txt`;",
"    }",
"",
"    setVariables = () => {",
"        const fileName = this._getUniqueFileName();",
"",
"        pm.collectionVariables.set('upload_fileName', fileName);",
"        pm.collectionVariables.set('upload_path', `/${fileName}`);",
"    }",
"}",
"",
"const run = new CollectionRun();",
"run.getAndSaveDropboxToken();",
"run.setVariables();",
""
]
}
},
{
"listen": "test",
"script": {
"type": "text/javascript",
"exec": [
""
]
}
}
],
"variable": [
{
"key": "apiURL_GetMetaData",
"value": "https://api.dropboxapi.com/2/files/get_metadata"
},
{
"key": "apiURL_Upload",
"value": "https://content.dropboxapi.com/2/files/upload",
"type": "string"
},
{
"key": "apiURL_DeleteFile",
"value": "https://api.dropboxapi.com/2/file_requests/delete",
"type": "string"
},
{
"key": "fileName",
"value": ""
},
{
"key": "apiMethodUrl",
"value": ""
},
{
"key": "lastSuccessfullUpload",
"value": ""
},
{
"key": "lastSuccessfullUploadFileName",
"value": ""
},
{
"key": "upload_fileName",
"value": ""
},
{
"key": "upload_path",
"value": ""
}
]
}
